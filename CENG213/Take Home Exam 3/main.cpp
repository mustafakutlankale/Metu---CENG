#include <iostream>
#include "MeshGraph.h"
#include "ObjLoader.h"
#include <vector>
#include <string>
#include <sstream>
#include <fstream>

int main()
{
	std::vector<Double3> vertexPositions;
	vertexPositions.push_back({ 2.52648, 10.2748, 4.681 });
	vertexPositions.push_back({ 0.31614, 10.8998, 4.89893 });
	vertexPositions.push_back({ -1.66397, 10.6419, 4.75376 });
	vertexPositions.push_back({ -0.635863, 8.49446, 5.98366 });
	vertexPositions.push_back({ 1.73619, 10.4263, 4.92605 });
	vertexPositions.push_back({ -2.35898, 10.1221, 4.6398 });
	vertexPositions.push_back({ -4.14198, 9.97439, 3.66627 });
	vertexPositions.push_back({ 4.99535, 9.58928, 3.71021 });
	vertexPositions.push_back({ 6.38943, 7.47837, 2.87067 });
	vertexPositions.push_back({ -4.27665, 8.22719, 4.25207 });
	vertexPositions.push_back({ 4.03479, 9.08499, 4.58086 });
	vertexPositions.push_back({ 5.24438, 8.27861, 4.09753 });
	vertexPositions.push_back({ -2.31835, 8.66025, 5.56762 });
	vertexPositions.push_back({ 0.146471, 8.2833, 5.97615 });
	vertexPositions.push_back({ -5.3256, 8.5664, 2.99222 });
	vertexPositions.push_back({ 2.39065, 8.19092, 6.0583 });
	vertexPositions.push_back({ 3.72008, 6.98778, 5.43665 });
	vertexPositions.push_back({ 4.03195, 7.62019, 5.55683 });
	vertexPositions.push_back({ -1.63761, 7.32611, 6.13971 });
	vertexPositions.push_back({ 2.79428, 7.29729, 6.07695 });
	vertexPositions.push_back({ -5.50731, 7.34536, 3.05151 });
	vertexPositions.push_back({ -2.86735, 7.38368, 5.69306 });
	vertexPositions.push_back({ 0.279209, 7.25378, 6.1682 });
	vertexPositions.push_back({ 7.36839, 5.00996, 1.01957 });
	vertexPositions.push_back({ -4.43748, 7.43026, 4.81775 });
	vertexPositions.push_back({ 4.96827, 7.54294, 5.03135 });
	vertexPositions.push_back({ -6.43951, 6.79492, 1.4385 });
	vertexPositions.push_back({ 0.078203, 6.28324, 5.90039 });
	vertexPositions.push_back({ 6.96656, 5.0999, 2.24941 });
	vertexPositions.push_back({ 6.07358, 6.88597, 4.05453 });
	vertexPositions.push_back({- 3.42748, 6.76575, 5.32211		 });
	vertexPositions.push_back({- 0.992738, 5.98871, 5.0697		 });
	vertexPositions.push_back({1.72823, 5.94311, 5.12002		 });
	vertexPositions.push_back({- 5.04204, 6.54885, 4.36584		 });
	vertexPositions.push_back({- 6.62844, 5.73317, 1.19163		 });
	vertexPositions.push_back({5.7926, 6.59229, 4.40974			 });
	vertexPositions.push_back({- 3.10855, 6.05533, 5.24683		 });
	vertexPositions.push_back({- 1.65999, 5.34812, 4.83237		 });
	vertexPositions.push_back({3.93048, 6.03214, 5.46738		 });
	vertexPositions.push_back({- 5.35487, 4.99974, 3.50843		 });
	vertexPositions.push_back({0.651888, 5.68603, 5.97798		 });
	vertexPositions.push_back({- 3.17544, 5.61683, 4.82736		 });
	vertexPositions.push_back({4.29458, 5.50537, 4.88397		 });
	vertexPositions.push_back({0.856672, 4.90896, 6.70081		 });
	vertexPositions.push_back({- 3.05189, 4.84234, 5.09588		 });
	vertexPositions.push_back({1.63801, 5.35104, 4.76807		 });
	vertexPositions.push_back({3.83039, 4.78024, 5.23248		 });
	vertexPositions.push_back({- 0.708776, 4.99573, 4.89932		 });
	vertexPositions.push_back({- 5.9229, 5.22261, 2.83476		 });
	vertexPositions.push_back({1.35959, 4.51853, 5.8023			 });
	vertexPositions.push_back({- 0.014368, 4.82904, 6.36637		 });
	vertexPositions.push_back({- 6.23353, 2.99497, 2.98932		 });
	vertexPositions.push_back({2.02735, 4.51941, 4.97827		 });
	vertexPositions.push_back({6.35264, 4.93657, 3.28245		 });
	vertexPositions.push_back({7.316, 2.41634, 1.42448			 });
	vertexPositions.push_back({5.08868, 4.14586, 4.41703		 });
	vertexPositions.push_back({- 5.35597, 2.93838, 4.34339		 });
	vertexPositions.push_back({- 3.63258, 4.13182, 4.75023		 });
	vertexPositions.push_back({- 6.99369, 3.99767, 0.623052		 });
	vertexPositions.push_back({3.66813, 3.91489, 4.8482			 });
	vertexPositions.push_back({1.3702, 2.76807, 7.9678			 });
	vertexPositions.push_back({- 0.987543, 2.60554, 6.35721		 });
	vertexPositions.push_back({- 1.44547, 3.67607, 5.34559		 });
	vertexPositions.push_back({0.258553, 4.66577, 7.11945		 });
	vertexPositions.push_back({- 2.56977, 3.62924, 5.0805		 });
	vertexPositions.push_back({- 0.352114, 2.95493, 7.66989		 });
	vertexPositions.push_back({2.70573, 2.76199, 5.60373		 });
	vertexPositions.push_back({0.609071, 3.18414, 8.36974		 });
	vertexPositions.push_back({- 0.230174, 2.05194, 8.51847		 });
	vertexPositions.push_back({1.16276, 2.26033, 8.68859		 });
	vertexPositions.push_back({5.94415, 3.15666, 4.2834			 });
	vertexPositions.push_back({1.96178, 2.60027, 6.4265			 });
	vertexPositions.push_back({- 6.3519, 1.75081, 1.61331		 });
	vertexPositions.push_back({- 1.16472, 1.85194, 7.45565		 });
	vertexPositions.push_back({3.97551, 1.72703, 5.5187			 });
	vertexPositions.push_back({2.28083, 1.78049, 7.14584		 });
	vertexPositions.push_back({7.10455, 2.8021, 2.69277			 });
	vertexPositions.push_back({0.755819, 1.48107, 8.29641		 });
	vertexPositions.push_back({1.77034, 1.27828, 6.40957		 });
	vertexPositions.push_back({2.31632, 1.58352, 6.06283		 });
	vertexPositions.push_back({5.1826, 1.60763, 4.81586			 });
	vertexPositions.push_back({- 1.44714, 1.70583, 5.92588		 });
	vertexPositions.push_back({6.61942, 2.91854, 3.67204		 });
	vertexPositions.push_back({- 4.99717, 0.225797, 3.67981		 });
	vertexPositions.push_back({6.28554, 0.647111, 3.32138		 });
	vertexPositions.push_back({- 0.736731, 1.21612, 6.3968		 });
	vertexPositions.push_back({- 1.83065, 2.06243, 5.87083		 });
	vertexPositions.push_back({0.457696, 1.15156, 7.47353		 });
	vertexPositions.push_back({- 3.12441, 1.96451, 5.50043		 });
	vertexPositions.push_back({0.191305, 0.482559, 7.17298		 });
	vertexPositions.push_back({- 3.00106, 0.619306, 5.56871		 });
	vertexPositions.push_back({- 2.10081, 0.532968, 5.94427		 });
	vertexPositions.push_back({- 0.429736, 0.511411, 6.95149	 });
	vertexPositions.push_back({3.38652, 0.173332, 5.93615		 });
	vertexPositions.push_back({- 3.90056, 0.244192, 4.80853		 });
	vertexPositions.push_back({1.14346, 0.732794, 7.10381		 });
	vertexPositions.push_back({- 5.7081, 0.424581, 2.6061		 });
	vertexPositions.push_back({6.86722, 0.548653, 1.31174		 });
	vertexPositions.push_back({- 0.82048, -0.495463, 7.07653	 });
	vertexPositions.push_back({5.04333, -0.136288, 4.70116		 });
	vertexPositions.push_back({- 2.82062, -1.21052, 5.71685		 });
	vertexPositions.push_back({0.396534, -0.348279, 7.54345		 });
	vertexPositions.push_back({6.416, -1.05177, 1.72371			 });
	vertexPositions.push_back({1.99737, -0.428789, 7.02484		 });
	vertexPositions.push_back({3.26928, -0.78958, 5.87164		 });
	vertexPositions.push_back({- 1.27438, -0.968813, 6.45572	 });
	vertexPositions.push_back({0.508154, -0.942167, 7.17874		 });
	vertexPositions.push_back({- 2.02933, -0.407063, 6.22407	 });
	vertexPositions.push_back({0.128155, -1.09172, 7.04417		 });
	vertexPositions.push_back({2.06996, -1.01911, 6.52438		 });
	vertexPositions.push_back({2.98683, -1.26066, 5.39834		 });
	vertexPositions.push_back({4.07895, -1.04763, 5.51896		 });
	vertexPositions.push_back({- 1.62923, -1.24261, 5.7733		 });
	vertexPositions.push_back({1.54007, -1.15126, 6.92681		 });
	vertexPositions.push_back({1.56984, -1.6615, 7.11482		 });
	vertexPositions.push_back({5.87234, -2.29752, 2.37971		 });
	vertexPositions.push_back({6.05387, -1.03666, 3.08349		 });
	vertexPositions.push_back({- 2.25066, -2.40537, 5.70053		 });
	vertexPositions.push_back({0.293285, -1.67781, 7.31411		 });
	vertexPositions.push_back({- 0.729857, -1.60916, 6.78237	 });
	vertexPositions.push_back({2.07946, -2.3804, 6.39673		 });
	vertexPositions.push_back({5.6263, -1.71332, 3.50181		 });
	vertexPositions.push_back({0.577538, -2.49672, 6.81455		 });
	vertexPositions.push_back({3.81076, -2.36771, 5.14389		 });
	vertexPositions.push_back({- 5.86356, -1.17997, 1.47825		 });
	vertexPositions.push_back({- 0.686343, -2.65886, 6.63052	 });
	vertexPositions.push_back({- 4.70667, -2.76923, 3.04491		 });
	vertexPositions.push_back({3.52682, -3.57031, 5.14366		 });
	vertexPositions.push_back({0.349736, -3.73427, 7.1897		 });
	vertexPositions.push_back({- 3.42901, -2.71793, 4.73745		 });
	vertexPositions.push_back({1.68719, -3.96386, 6.84859		 });
	vertexPositions.push_back({4.58383, -3.6791, 3.46725		 });
	vertexPositions.push_back({2.60337, -4.97938, 5.7103		 });
	vertexPositions.push_back({- 2.63835, -3.82103, 5.32384		 });
	vertexPositions.push_back({- 1.01255, -4.38088, 6.53841		 });
	vertexPositions.push_back({- 3.47247, -4.0549, 4.07236		 });
	vertexPositions.push_back({0.378853, -4.68763, 6.97008		 });
	vertexPositions.push_back({- 1.58386, -4.92497, 5.78179		 });
	vertexPositions.push_back({0.359941, -5.22211, 6.33076    	 });


	std::vector<IdPair> edges;

	edges.push_back({0, 4	  });
	edges.push_back({0, 7	  });
	edges.push_back({0, 10	  });
	edges.push_back({0, 15	  });
	edges.push_back({1, 2	  });
	edges.push_back({1, 3	  });
	edges.push_back({1, 4	  });
	edges.push_back({1, 13	  });
	edges.push_back({2, 3	  });
	edges.push_back({2, 5	  });
	edges.push_back({3, 5	  });
	edges.push_back({3, 12	  });
	edges.push_back({3, 13	  });
	edges.push_back({3, 18	  });
	edges.push_back({3, 22	  });
	edges.push_back({4, 13	  });
	edges.push_back({4, 15	  });
	edges.push_back({5, 6	  });
	edges.push_back({5, 12	  });
	edges.push_back({6, 9	  });
	edges.push_back({6, 12	  });
	edges.push_back({6, 14	  });
	edges.push_back({7, 8	  });
	edges.push_back({7, 10	  });
	edges.push_back({7, 11	  });
	edges.push_back({8, 11	  });
	edges.push_back({8, 23	  });
	edges.push_back({8, 28	  });
	edges.push_back({8, 29	  });
	edges.push_back({9, 12	  });
	edges.push_back({9, 14	  });
	edges.push_back({9, 20	  });
	edges.push_back({9, 24	  });
	edges.push_back({10, 11	  });
	edges.push_back({10, 15	  });
	edges.push_back({10, 17	  });
	edges.push_back({10, 25	  });
	edges.push_back({11, 25	  });
	edges.push_back({11, 29	  });
	edges.push_back({12, 18	  });
	edges.push_back({12, 21	  });
	edges.push_back({12, 24	  });
	edges.push_back({13, 15	  });
	edges.push_back({13, 22	  });
	edges.push_back({14, 20	  });
	edges.push_back({14, 26	  });
	edges.push_back({15, 16	  });
	edges.push_back({15, 17	  });
	edges.push_back({15, 19	  });
	edges.push_back({15, 22	  });
	edges.push_back({16, 17	  });
	edges.push_back({16, 19	  });
	edges.push_back({16, 25	  });
	edges.push_back({16, 32	  });
	edges.push_back({16, 38	  });
	edges.push_back({17, 25	  });
	edges.push_back({18, 21	  });
	edges.push_back({18, 22	  });
	edges.push_back({18, 27	  });
	edges.push_back({18, 31	  });
	edges.push_back({19, 22	  });
	edges.push_back({19, 27	  });
	edges.push_back({19, 32	  });
	edges.push_back({20, 24	  });
	edges.push_back({20, 26	  });
	edges.push_back({20, 33	  });
	edges.push_back({20, 48	  });
	edges.push_back({21, 24	  });
	edges.push_back({21, 30	  });
	edges.push_back({21, 31	  });
	edges.push_back({21, 36	  });
	edges.push_back({22, 27	  });
	edges.push_back({23, 28	  });
	edges.push_back({23, 54	  });
	edges.push_back({23, 76	  });
	edges.push_back({24, 30	  });
	edges.push_back({24, 33	  });
	edges.push_back({25, 29	  });
	edges.push_back({25, 35	  });
	edges.push_back({25, 38	  });
	edges.push_back({26, 34	  });
	edges.push_back({26, 48	  });
	edges.push_back({27, 31	  });
	edges.push_back({27, 32	  });
	edges.push_back({27, 40	  });
	edges.push_back({27, 47	  });
	edges.push_back({27, 50	  });
	edges.push_back({28, 29	  });
	edges.push_back({28, 53	  });
	edges.push_back({28, 76	  });
	edges.push_back({28, 82	  });
	edges.push_back({29, 35	  });
	edges.push_back({29, 53	  });
	edges.push_back({30, 33	  });
	edges.push_back({30, 36	  });
	edges.push_back({31, 36	  });
	edges.push_back({31, 37	  });
	edges.push_back({31, 41	  });
	edges.push_back({31, 47	  });
	edges.push_back({32, 38	  });
	edges.push_back({32, 40	  });
	edges.push_back({32, 45	  });
	edges.push_back({33, 36	  });
	edges.push_back({33, 39	  });
	edges.push_back({33, 48	  });
	edges.push_back({34, 48	  });
	edges.push_back({34, 51	  });
	edges.push_back({34, 58	  });
	edges.push_back({35, 38	  });
	edges.push_back({35, 42	  });
	edges.push_back({35, 53	  });
	edges.push_back({36, 39	  });
	edges.push_back({36, 41	  });
	edges.push_back({37, 41	  });
	edges.push_back({37, 44	  });
	edges.push_back({37, 47	  });
	edges.push_back({38, 42	  });
	edges.push_back({38, 45	  });
	edges.push_back({39, 41	  });
	edges.push_back({39, 48	  });
	edges.push_back({39, 56	  });
	edges.push_back({39, 57	  });
	edges.push_back({40, 43	  });
	edges.push_back({40, 45	  });
	edges.push_back({40, 49	  });
	edges.push_back({40, 50	  });
	edges.push_back({40, 63	  });
	edges.push_back({41, 44	  });
	edges.push_back({41, 57	  });
	edges.push_back({42, 45	  });
	edges.push_back({42, 46	  });
	edges.push_back({42, 53	  });
	edges.push_back({42, 55	  });
	edges.push_back({43, 49	  });
	edges.push_back({43, 60	  });
	edges.push_back({43, 63	  });
	edges.push_back({43, 67	  });
	edges.push_back({44, 47	  });
	edges.push_back({44, 57	  });
	edges.push_back({44, 64	  });
	edges.push_back({45, 46	  });
	edges.push_back({45, 49	  });
	edges.push_back({45, 52	  });
	edges.push_back({46, 52	  });
	edges.push_back({46, 55	  });
	edges.push_back({46, 59	  });
	edges.push_back({47, 50	  });
	edges.push_back({47, 62	  });
	edges.push_back({47, 64	  });
	edges.push_back({48, 51	  });
	edges.push_back({48, 56	  });
	edges.push_back({49, 52	  });
	edges.push_back({49, 60	  });
	edges.push_back({49, 66	  });
	edges.push_back({49, 71	  });
	edges.push_back({50, 61	  });
	edges.push_back({50, 62	  });
	edges.push_back({50, 63	  });
	edges.push_back({50, 65	  });
	edges.push_back({51, 56	  });
	edges.push_back({51, 58	  });
	edges.push_back({51, 72	  });
	edges.push_back({51, 83	  });
	edges.push_back({51, 96	  });
	edges.push_back({52, 59	  });
	edges.push_back({52, 66	  });
	edges.push_back({53, 55	  });
	edges.push_back({53, 70	  });
	edges.push_back({53, 82	  });
	edges.push_back({54, 76	  });
	edges.push_back({54, 97	  });
	edges.push_back({55, 59	  });
	edges.push_back({55, 66	  });
	edges.push_back({55, 70	  });
	edges.push_back({55, 74	  });
	edges.push_back({56, 57	  });
	edges.push_back({56, 83	  });
	edges.push_back({56, 88	  });
	edges.push_back({56, 90	  });
	edges.push_back({56, 94	  });
	edges.push_back({57, 64	  });
	edges.push_back({57, 88	  });
	edges.push_back({58, 72	  });
	edges.push_back({59, 66	  });
	edges.push_back({60, 67	  });
	edges.push_back({60, 69	  });
	edges.push_back({60, 71	  });
	edges.push_back({60, 75	  });
	edges.push_back({61, 62	  });
	edges.push_back({61, 65	  });
	edges.push_back({61, 73	  });
	edges.push_back({61, 81	  });
	edges.push_back({61, 86	  });
	edges.push_back({62, 64	  });
	edges.push_back({62, 86	  });
	edges.push_back({63, 65	  });
	edges.push_back({63, 67	  });
	edges.push_back({63, 68	  });
	edges.push_back({64, 86	  });
	edges.push_back({64, 88	  });
	edges.push_back({65, 68	  });
	edges.push_back({65, 73	  });
	edges.push_back({66, 71	  });
	edges.push_back({66, 74	  });
	edges.push_back({66, 79	  });
	edges.push_back({66, 93	  });
	edges.push_back({67, 68	  });
	edges.push_back({67, 69	  });
	edges.push_back({68, 69	  });
	edges.push_back({68, 73	  });
	edges.push_back({68, 77	  });
	edges.push_back({68, 85	  });
	edges.push_back({68, 87	  });
	edges.push_back({69, 75	  });
	edges.push_back({69, 77	  });
	edges.push_back({70, 74	  });
	edges.push_back({70, 80	  });
	edges.push_back({70, 82	  });
	edges.push_back({71, 75	  });
	edges.push_back({71, 79	  });
	edges.push_back({72, 96	  });
	edges.push_back({72, 124  });
	edges.push_back({73, 81	  });
	edges.push_back({73, 85	  });
	edges.push_back({74, 80	  });
	edges.push_back({74, 93	  });
	edges.push_back({75, 77	  });
	edges.push_back({75, 78	  });
	edges.push_back({75, 79	  });
	edges.push_back({76, 82	  });
	edges.push_back({76, 84	  });
	edges.push_back({76, 97	  });
	edges.push_back({77, 78	  });
	edges.push_back({77, 87	  });
	edges.push_back({78, 79	  });
	edges.push_back({78, 87	  });
	edges.push_back({78, 93	  });
	edges.push_back({78, 95	  });
	edges.push_back({79, 93	  });
	edges.push_back({80, 82	  });
	edges.push_back({80, 84	  });
	edges.push_back({80, 93	  });
	edges.push_back({80, 99	  });
	edges.push_back({81, 85	  });
	edges.push_back({81, 86	  });
	edges.push_back({81, 91	  });
	edges.push_back({82, 84	  });
	edges.push_back({83, 94	  });
	edges.push_back({83, 96	  });
	edges.push_back({83, 126  });
	edges.push_back({83, 129  });
	edges.push_back({84, 97	  });
	edges.push_back({84, 99	  });
	edges.push_back({84, 116  });
	edges.push_back({85, 87	  });
	edges.push_back({85, 91	  });
	edges.push_back({85, 92	  });
	edges.push_back({86, 88	  });
	edges.push_back({86, 91	  });
	edges.push_back({87, 89	  });
	edges.push_back({87, 92	  });
	edges.push_back({87, 95	  });
	edges.push_back({88, 90	  });
	edges.push_back({88, 91	  });
	edges.push_back({89, 92	  });
	edges.push_back({89, 95	  });
	edges.push_back({89, 101  });
	edges.push_back({90, 91	  });
	edges.push_back({90, 94	  });
	edges.push_back({90, 100  });
	edges.push_back({90, 107  });
	edges.push_back({91, 92	  });
	edges.push_back({91, 107  });
	edges.push_back({92, 98	  });
	edges.push_back({92, 101  });
	edges.push_back({92, 107  });
	edges.push_back({93, 95	  });
	edges.push_back({93, 99	  });
	edges.push_back({93, 103  });
	edges.push_back({93, 104  });
	edges.push_back({93, 111  });
	edges.push_back({94, 100  });
	edges.push_back({94, 129  });
	edges.push_back({95, 101  });
	edges.push_back({95, 103  });
	edges.push_back({96, 124  });
	edges.push_back({96, 126  });
	edges.push_back({97, 102  });
	edges.push_back({97, 116  });
	edges.push_back({98, 101  });
	edges.push_back({98, 105  });
	edges.push_back({98, 106  });
	edges.push_back({98, 107  });
	edges.push_back({99, 111  });
	edges.push_back({99, 116  });
	edges.push_back({99, 121  });
	edges.push_back({100, 107 });
	edges.push_back({100, 112 });
	edges.push_back({100, 117 });
	edges.push_back({100, 129 });
	edges.push_back({101, 103 });
	edges.push_back({101, 106 });
	edges.push_back({102, 115 });
	edges.push_back({102, 116 });
	edges.push_back({103, 104 });
	edges.push_back({103, 106 });
	edges.push_back({103, 109 });
	edges.push_back({104, 109 });
	edges.push_back({104, 110 });
	edges.push_back({104, 111 });
	edges.push_back({104, 123 });
	edges.push_back({105, 106 });
	edges.push_back({105, 107 });
	edges.push_back({105, 109 });
	edges.push_back({105, 110 });
	edges.push_back({105, 112 });
	edges.push_back({106, 109 });
	edges.push_back({107, 112 });
	edges.push_back({108, 110 });
	edges.push_back({108, 112 });
	edges.push_back({108, 113 });
	edges.push_back({108, 118 });
	edges.push_back({108, 119 });
	edges.push_back({109, 110 });
	edges.push_back({110, 112 });
	edges.push_back({110, 113 });
	edges.push_back({110, 114 });
	edges.push_back({110, 120 });
	edges.push_back({110, 123 });
	edges.push_back({111, 121 });
	edges.push_back({111, 123 });
	edges.push_back({112, 117 });
	edges.push_back({112, 119 });
	edges.push_back({113, 114 });
	edges.push_back({113, 118 });
	edges.push_back({114, 118 });
	edges.push_back({114, 120 });
	edges.push_back({114, 122 });
	edges.push_back({115, 116 });
	edges.push_back({115, 121 });
	edges.push_back({115, 131 });
	edges.push_back({116, 121 });
	edges.push_back({117, 119 });
	edges.push_back({117, 125 });
	edges.push_back({117, 129 });
	edges.push_back({117, 133 });
	edges.push_back({118, 119 });
	edges.push_back({118, 122 });
	edges.push_back({118, 125 });
	edges.push_back({119, 125 });
	edges.push_back({120, 122 });
	edges.push_back({120, 123 });
	edges.push_back({120, 127 });
	edges.push_back({120, 128 });
	edges.push_back({120, 130 });
	edges.push_back({121, 123 });
	edges.push_back({121, 131 });
	edges.push_back({122, 125 });
	edges.push_back({122, 128 });
	edges.push_back({123, 127 });
	edges.push_back({123, 131 });
	edges.push_back({124, 126 });
	edges.push_back({125, 128 });
	edges.push_back({125, 133 });
	edges.push_back({125, 134 });
	edges.push_back({126, 129 });
	edges.push_back({126, 135 });
	edges.push_back({127, 130 });
	edges.push_back({127, 131 });
	edges.push_back({127, 132 });
	edges.push_back({128, 130 });
	edges.push_back({128, 134 });
	edges.push_back({128, 136 });
	edges.push_back({129, 133 });
	edges.push_back({129, 135 });
	edges.push_back({130, 132 });
	edges.push_back({130, 136 });
	edges.push_back({131, 132 });
	edges.push_back({132, 136 });
	edges.push_back({132, 138 });
	edges.push_back({133, 134 });
	edges.push_back({133, 135 });
	edges.push_back({133, 137 });
	edges.push_back({134, 136 });
	edges.push_back({134, 137 });
	edges.push_back({135, 137 });
	edges.push_back({136, 137 });
	edges.push_back({136, 138 });
	edges.push_back({137, 138 });

	MeshGraph g(vertexPositions, edges);
	std::vector<Color> out;
	Color c;
	c.r = 0;
	c.g = 255;
	c.b = 255;
	g.PaintInRangeGeodesic(out, 15, c, 8, FILTER_GAUSSIAN, 10);
	g.WriteColorToFile(out, "output.txt");
	return 0;
}

